var documenterSearchIndex = {"docs":
[{"location":"","page":"Introduction","title":"Introduction","text":"<img style=\"height:9em;\" alt=\"Twitch.jl\" src=\"assets/logo.svg\"/>","category":"page"},{"location":"#Introduction","page":"Introduction","title":"Introduction","text":"","category":"section"},{"location":"","page":"Introduction","title":"Introduction","text":"This package is aimed to provide a convenient possibility to connect to the APIs provided by the  livestreaming plattform Twitch. ","category":"page"},{"location":"#Chat-Server-Interface","page":"Introduction","title":"Chat Server Interface","text":"","category":"section"},{"location":"","page":"Introduction","title":"Introduction","text":"Chat Server Todos:","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"[x] Parse messages\n[x] Connect and read messages\n[ ] Interface for active communication, i.e. sending messages","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"In order to connect to the chat the chatreceiver is employed and run within a task:","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"\naddr = \"irc.chat.twitch.tv\"\nport = 6667\nuser = \"justinfan8912\"\noauth = \"dummy\"\nchannel = \"xqc\"\nc = Condition()\nmessage_queue = Channel{AbstractString}(10000)\n\nt = @task Twitch.chatreceiver(addr, port, user, oauth, channel, c, message_queue)\nschedule(t)","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"The received messages are in the current version written to the message_queue in raw string format. The messages can be accessed and parsed as follows:","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"\nif isready(message_queue)\n    raw = !take(message_queue)\n    resp = Twitch.response(raw)\nend","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"The resp now contains a Twitch.Message or Twitch.Notice struct.  As the name implies Twitch.Message contains the information of a chat message. If some actions, e.g. bans or time-outs, occurs, the information is stored within a Twitch.Notice.","category":"page"},{"location":"#Helix-API","page":"Introduction","title":"Helix API","text":"","category":"section"},{"location":"","page":"Introduction","title":"Introduction","text":"Helix API Todos","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"[ ] Moderation commands, e.g. ban","category":"page"}]
}
